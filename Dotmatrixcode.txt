#include<LedControl.h>

#define DIN 11
#define CLK 13
#define CS 10
#define BTN_1 2
#define BTN_2 3
#define LEDR 4
#define LEDG 5
#define LEDY 6


volatile int present1 = 0;
volatile int present2 = 0;
const int debounce = 50;
volatile int check[6] = {0, 0, 0, 0, 0, 0};
const int v[6] = {1, 1, 2, 2, 1, 2};
volatile int order = 0;

LedControl lc = LedControl(DIN, CLK, CS, 0);

void Nani() {
  if (millis() - present1 > debounce) {
    if (digitalRead(BTN_1) == LOW) {
      if (order > 6) {
        order = 0;
        for (int i = 0; i < 6; i++) {
          check[i] = 0;
        }
      }
      check[order] = 1;
      if (check[order] == v[order]) {
        digitalWrite(LEDG, HIGH);
        delay(1000);
        digitalWrite(LEDG, LOW);
      }
      else {
        digitalWrite(LEDR, HIGH);
        delay(1000);
        digitalWrite(LEDR, LOW);
      }
      order++;
    }
  }
}

void What() {
  if (millis() - present2 > debounce) {
    if (digitalRead(BTN_2) == LOW) {
      if (order > 6) {
        order = 0;
        for (int i = 0; i < 6; i++) {
          check[i] = 0;
        }
      }
      check[order] = 2;
      if (check[order] == v[order]) {
        digitalWrite(LEDG, HIGH);
        delay(1000);
        digitalWrite(LEDG, LOW);
      }
      else {
        digitalWrite(LEDR, HIGH);
        delay(1000);
        digitalWrite(LEDR, LOW);
      }
      order++;
    }
  }
}

void triangle() {
  byte a[8] = {
    B10000000,
    B11000000,
    B10100000,
    B10010000,
    B10001000,
    B10000100,
    B10000010,
    B11111111
  };
  for (int i = 0; i < 8; i++) {
    lc.setRow(0, i, a[i]);
  }
}
void Evil() {
  byte b[8] = {
    B11111111,
    B10000000,
    B10000000,
    B11111111,
    B11111111,
    B10000000,
    B10000000,
    B11111111
  };
  for (int i = 0; i < 8; i++) {
    lc.setRow(0, i, b[i]);
  }
}
void Ant() {
  byte c[8] = {
    B11111111,
    B10000001,
    B10000001,
    B11111111,
    B10000001,
    B10000001,
    B10000001,
    B10000001
  };
  for (int i = 0; i < 8; i++) {
    lc.setRow(0, i, c[i]);
  }
}

void Rose() {
  byte d[8] = {
  B11111111,
  B10000001,
  B10000001,
  B11111111,
  B10001000,
  B10000100,
  B10000010,
  B10000001
  };
  for (int i = 0; i < 8; i++) {
    lc.setRow(0, i, d[i]);
  }
}

void TTT() {
  byte e[8] = {
  B11111111,
  B11111111,
  B00011000,
  B00011000,
  B00011000,
  B00011000,
  B00011000,
  B00011000
  };
  for (int i = 0; i < 8; i++) {
    lc.setRow(0, i, e[i]);
  }
}

void home() {
  byte f[8] = {
  B11000011,
  B11000011,
  B11000011,
  B11111111,
  B11111111,
  B11000011,
  B11000011,
  B11000011
  };
  for (int i = 0; i < 8; i++) {
    lc.setRow(0, i, f[i]);
  }
}

void zero() {
  byte g[8] = {
  B00000000,
B00111100,
B01000010,
B01000010,
B01000010,
B01000010,
B00111100,
B00000000
  };
  for (int i = 0; i < 8; i++) {
    lc.setRow(0, i, g[i]);
  }
}

void six() {
  byte h[8] = {
 B00000000,
B00111100,
B01000000,
B01111110,
B01000010,
B01000010,
B00111100,
B00000000
  };
  for (int i = 0; i < 8; i++) {
    lc.setRow(0, i, h[i]);
  }
}

void nine() {
  byte o[8] = {
 B00000000,
B00111100,
B01000010,
B01000010,
B00111110,
B00000010,
B00111100,
B00000000
  };
  for (int i = 0; i < 8; i++) {
    lc.setRow(0, i, o[i]);
  }
}

void seven() {
  byte p[8] = {
 B00000000,
B00111110,
B00000010,
B00000100,
B00111100,
B00010000,
B00100000,
B00000000
  };
  for (int i = 0; i < 8; i++) {
    lc.setRow(0, i, p[i]);
  }
}
void sevenlastnum() {
  byte b[8] = {
    B11111000,
    B11110000,
    B11110000,
    B11111000,
    B10011100,
    B00001110,
    B00000111,
    B00000010
  };
  for (int i = 0; i < 8; i++) {
    lc.setRow(0, i, b[i]);
  }
}

void setup() {
  pinMode(BTN_1, INPUT_PULLUP);
  pinMode(BTN_2, INPUT_PULLUP);
  pinMode(LEDR, OUTPUT);
  pinMode(LEDG, OUTPUT);
  pinMode(LEDY, OUTPUT);
  digitalWrite(LEDR, LOW);
  digitalWrite(LEDG, LOW);
  digitalWrite(LEDY, LOW);

  attachInterrupt(digitalPinToInterrupt(BTN_1), Nani, CHANGE);
  pinMode(BTN_2, INPUT_PULLUP);
  attachInterrupt(digitalPinToInterrupt(BTN_2), What, CHANGE);
  lc.shutdown(0, false);
  lc.setIntensity(0, 8);
  lc.clearDisplay(0);
}

void loop() {
  if (check[0] == 1 && check[1] == 1 && check[2] == 2 && check[3] == 2 && check[4] == 1 && check[5] == 2 && order == 6) {
    digitalWrite(LEDR, LOW);
    digitalWrite(LEDG, LOW);
    delay(100);
    digitalWrite(LEDR, HIGH);
    digitalWrite(LEDG, HIGH);
    digitalWrite(LEDY, HIGH);
    delay(100);
    digitalWrite(LEDR, LOW);
    digitalWrite(LEDG, LOW);
    digitalWrite(LEDY, LOW);
    delay(100);
    digitalWrite(LEDR, HIGH);
    digitalWrite(LEDG, HIGH);
    digitalWrite(LEDY, HIGH);
    for (int i = 0; i < 6; i++) {
      check[i] = 0;
    }
    order = 0;
    digitalWrite(LEDR, LOW);
    digitalWrite(LEDG, LOW);
    digitalWrite(LEDY, LOW);
  } else {
    for (int i = 0; i < 6; i++) {
      check[i] = 0;
    }
    order = 0;
    triangle();
    delay(1000);
    Evil();
    delay(1000);
    Ant();
    delay(1000);
    Rose();
    delay(1000);
    TTT();
    delay(1000);
    home();
    delay(1000);
    zero();
    delay(1000);
    six();
    delay(1000); 
    nine();
    delay(1000);
    seven();
    delay(1000);  
    sevenlastnum();
    delay(1000);
        
    
  }
}